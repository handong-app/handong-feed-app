<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.handong.feed.mapper.TbmessageMapper">

    <!---->
    <select id="scrollList" parameterType="map" resultType="app.handong.feed.dto.TbmessageDto$Detail">
        SELECT subject.id AS subjectId,
        message.id AS id,
        message.last_sent_at AS sentAt,
        message.message AS message,
        CASE WHEN likeDB.deleted = 'n' THEN 1 ELSE 0 END AS `like`,
        (SELECT COUNT(*) FROM TbKaMessage m WHERE m.subject_id = subject.id) AS messageCount
        FROM (
        SELECT *
        FROM TbSubject s
        WHERE last_sent_at &lt; #{afterSentAt}
--         AND last_sent_at &gt; (UNIX_TIMESTAMP() - (3 * 24 * 60 * 60))
        <if test="fetchType == 'unseen' and userId != null and userId != ''">
            AND NOT EXISTS (
            SELECT 1
            FROM mydb_TbUserInteraction m
            WHERE s.id = m.subjectId
            AND #{userId} = m.userId)
            AND last_sent_at > (SELECT COALESCE(MAX(read_last_sent_at), 0)  FROM mydb_TbUserReadAll WHERE id = #{userId})
        </if>
        <if test="fetchType == 'like' and userId != null and userId != ''">
            AND EXISTS (
            SELECT 1
            FROM mydb_TbUserLike m
            WHERE s.id = m.subjectId
            AND #{userId} = m.userId)
        </if>
        ORDER BY last_sent_at DESC
        LIMIT 15
        ) AS subject
        JOIN TbKaMessage AS message ON message.chat_id = subject.last_sent_chat_id
        LEFT JOIN mydb_TbUserLike AS likeDB ON subject.id = likeDB.subjectId AND #{userId} = likeDB.userId
    </select>

    <select id="countAll" parameterType="map" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM (SELECT *
        FROM TbSubject s
        WHERE last_sent_at &lt; #{afterSentAt}
--         AND last_sent_at &gt; (UNIX_TIMESTAMP() - (3 * 24 * 60 * 60))
        <if test="userId != null and userId != ''">
            AND NOT EXISTS (SELECT 1
            FROM mydb_TbUserInteraction m
            WHERE s.id = m.subjectId
            AND #{userId} = m.userId)
            AND last_sent_at > (SELECT COALESCE(MAX(read_last_sent_at), 0)  FROM mydb_TbUserReadAll WHERE id = #{userId})
        </if>
        ORDER BY last_sent_at DESC) AS subject
    </select>

    <select id="fileDetails" parameterType="string" resultType="app.handong.feed.dto.TbmessageDto$FileDetail">
        SELECT file.hash AS hash,
               file.ext  AS ext
        FROM TbKaFile AS file
                 JOIN (SELECT file_hash, appear_order, MAX(modified_at) AS latest_modified_at
                       FROM TbFileMessageRelation
                       WHERE message_id = #{messageId}
                       GROUP BY file_hash, appear_order) AS fml
                      ON file.hash = fml.file_hash
                 JOIN (SELECT appear_order, MAX(modified_at) AS latest_modified_at
                       FROM TbFileMessageRelation
                       WHERE message_id = #{messageId}
                       GROUP BY appear_order) AS latest ON fml.appear_order = latest.appear_order
            AND fml.latest_modified_at = latest.latest_modified_at
        ORDER BY fml.appear_order;
    </select>

    <select id="getOneHash" parameterType="map" resultType="app.handong.feed.dto.TbmessageDto$Detail">
        SELECT message.subject_id AS subjectId,
        message.id AS id,
        message.last_sent_at AS sentAt,
        <if test="userId != null and userId != ''">
            i.userId AS `like`,
        </if>
        message.message AS message,
        (SELECT COUNT(*) FROM TbKaMessage m WHERE m.subject_id = message.subject_id) AS messageCount
        FROM TbKaMessage message
        <if test="userId != null and userId != ''">
            LEFT JOIN mydb_TbUserLike i
            ON message.subject_id = i.subjectId AND #{userId} = i.userId
        </if>
        WHERE message.id LIKE CONCAT(#{hash}, '%')
        ORDER BY message.created_at
        LIMIT 1
    </select>

</mapper>