<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.handong.feed.mapper.TbmessageMapper">

    <!---->
    <select id="scrollList" parameterType="map" resultType="app.handong.feed.dto.TbmessageDto$Detail">
        SELECT
        m.subject_id AS subjectId,
        m.id AS id,
        m.last_sent_at AS sentAt,
        m.message AS message,
        CASE WHEN likeDB.deleted = 'n' THEN 1 ELSE 0 END AS `like`,
        (SELECT COUNT(*) FROM TbKaMessage m2 WHERE m2.subject_id = m.subject_id) AS messageCount
        FROM TbKaMessage m
        INNER JOIN (
        SELECT subject_id, MAX(last_sent_at) AS max_sent_at
        FROM TbKaMessage
        GROUP BY subject_id
        ) latest
        ON m.subject_id = latest.subject_id AND m.last_sent_at = latest.max_sent_at
        LEFT JOIN mydb_TbUserLike likeDB
        ON m.subject_id = likeDB.subjectId AND #{userId} = likeDB.userId

        <where>
            <!-- afterSentAt 필터링 -->
            <if test="afterSentAt != null">
                AND m.last_sent_at &lt; #{afterSentAt}
            </if>

            <!-- search 필터링 -->
            <if test="search != null and search != ''">
                AND m.message LIKE CONCAT('%', #{search}, '%')
            </if>

            <!-- unseen 조건 -->
            <if test="fetchType == 'unseen' and userId != null and userId != ''">
                AND NOT EXISTS (
                SELECT 1 FROM mydb_TbUserInteraction i
                WHERE i.subjectId = m.subject_id AND i.userId = #{userId}
                )
                AND (
                SELECT MIN(last_sent_at)
                FROM TbKaMessage
                WHERE subject_id = m.subject_id
                ) > COALESCE(
                (SELECT MAX(read_last_sent_at)
                FROM mydb_TbUserReadAll
                WHERE id = #{userId}),
                0
                )
            </if>

            <!-- like 조건 -->
            <if test="fetchType == 'like' and userId != null and userId != ''">
                AND EXISTS (
                SELECT 1
                FROM mydb_TbUserLike l
                WHERE l.subjectId = m.subject_id
                AND l.userId = #{userId}
                )
            </if>

            <!-- Tag 검색 -->
            <if test="searchTags != null and searchTags.length > 0">
                AND EXISTS (
                SELECT 1
                FROM mydb_tb_subject_tag st
                WHERE st.tb_subject_id = m.subject_id
                AND st.tag_code IN
                <foreach item="tag" index="index" collection="searchTags" open="(" separator="," close=")">
                    #{tag}
                </foreach>
                )
            </if>
        </where>
        ORDER BY m.last_sent_at DESC
        LIMIT 15
    </select>

    <select id="countAll" parameterType="map" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM (SELECT *
        FROM TbSubject s
        WHERE last_sent_at &lt; #{afterSentAt}
        <if test="userId != null and userId != ''">
            AND NOT EXISTS (SELECT 1
            FROM mydb_TbUserInteraction m
            WHERE s.id = m.subjectId
            AND #{userId} = m.userId)
            AND (SELECT MIN(last_sent_at)
            FROM TbKaMessage
            WHERE subject_id = s.id)
            > (SELECT COALESCE(MAX(read_last_sent_at), 0)
            FROM mydb_TbUserReadAll
            WHERE id = #{userId})
        </if>
        ORDER BY last_sent_at DESC) AS subject
    </select>

    <select id="fileDetails" parameterType="string" resultType="app.handong.feed.dto.TbmessageDto$FileDetail">
        SELECT file.hash AS hash,
               file.ext  AS ext
        FROM TbKaFile AS file
                 JOIN (SELECT file_hash, appear_order, MAX(modified_at) AS latest_modified_at
                       FROM TbFileMessageRelation
                       WHERE message_id = #{messageId}
                       GROUP BY file_hash, appear_order) AS fml
                      ON file.hash = fml.file_hash
                 JOIN (SELECT appear_order, MAX(modified_at) AS latest_modified_at
                       FROM TbFileMessageRelation
                       WHERE message_id = #{messageId}
                       GROUP BY appear_order) AS latest ON fml.appear_order = latest.appear_order
            AND fml.latest_modified_at = latest.latest_modified_at
        ORDER BY fml.appear_order;
    </select>

    <select id="getOneHash" parameterType="map" resultType="app.handong.feed.dto.TbmessageDto$Detail">
        SELECT message.subject_id AS subjectId,
        message.id AS id,
        message.last_sent_at AS sentAt,
        <if test="userId != null and userId != ''">
            i.userId AS `like`,
        </if>
        message.message AS message,
        (SELECT COUNT(*) FROM TbKaMessage m WHERE m.subject_id = message.subject_id) AS messageCount
        FROM TbKaMessage message
        <if test="userId != null and userId != ''">
            LEFT JOIN mydb_TbUserLike i
            ON message.subject_id = i.subjectId AND #{userId} = i.userId
        </if>
        WHERE message.id LIKE CONCAT(#{hash}, '%')
        ORDER BY message.created_at
        LIMIT 1
    </select>

    <select id="externalFeedGetAll" parameterType="map" resultType="app.handong.feed.dto.TbmessageDto$Detail">
        SELECT
        m.subject_id AS subjectId,
        m.id AS id,
        m.last_sent_at AS sentAt,
        m.message AS message
        FROM TbKaMessage m
        <where>
            <if test="start != null and start &gt;= 0">
                m.last_sent_at &gt;= #{start}
            </if>
            <if test="end != null and end &gt;= 0">
                <if test="start != null and start &gt;= 0">
                    AND
                </if>
                m.last_sent_at &lt;= #{end}
            </if>
            <if test="filterNew == true">
                <choose>
                    <when test="start != null or end != null">
                        AND m.similar_id = 'NEW_MESSAGE'
                    </when>
                    <otherwise>
                        m.similar_id = 'NEW_MESSAGE'
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY m.last_sent_at DESC
        LIMIT
        <choose>
            <when test="limit != null and limit &lt; 200">
                #{limit}
            </when>
            <otherwise>
                200
            </otherwise>
        </choose>
    </select>

</mapper>